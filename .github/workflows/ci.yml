name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker images
      run: |
        docker-compose build
    
    - name: Start services
      run: |
        docker-compose up -d
    
    - name: Wait for services to be ready
      run: |
        sleep 30
        curl -f http://localhost:3001/health || exit 1
        curl -f http://localhost:3000 || exit 1
    
    - name: Run basic API tests
      run: |
        # Test health endpoint
        curl -f http://localhost:3001/health
        
        # Test upload endpoint (should return error for no file, but endpoint should exist)
        curl -X POST http://localhost:3001/api/upload || true
    
    - name: Check logs
      run: |
        docker-compose logs --tail=50
    
    - name: Cleanup
      if: always()
      run: |
        docker-compose down -v

  build-images:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push backend image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/videtopia-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/videtopia-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push frontend image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/videtopia-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/videtopia-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
